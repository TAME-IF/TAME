==============================================================================
    TAME Changelog
    (C) 2019 Matt Tropiano
==============================================================================

0.9BETA19
.........

	- Added: Raw Strings.
	- Added: RegExReplace() function.
	- Added: Passages!
	- Fixed: Some operations gave incorrect error messages in the Java implementation.
	- Fixed: BadParameterException's class name was fixed. D'oh!
	- Fixed: Some build shell scripts referred to an incorrect template path.
	- Changed: StrFormat() now uses '{}' instead of '[]' for replace tokens.


0.9BETA18
.........

	- Added: TAME Project (tamep).
	- Fixed: JS exporter path resolution problems.


0.9BETA17
.........

	- Fixed: (CONTINUE) not disappearing when control returned to user in JS
	  shell.


0.9BETA16
.........

	- Fixed: Made TimeFormat() consistent across implementations.
	- Changed: Removed some unnecessary time functions.


0.9BETA15
.........

	- Fixed: The power operator (**) was being parsed as a valid delimiter,
	  but not an operator.
	- Fixed: The single equals (=) should not have been considered a binary
	  expression operator.


0.9BETA14
.........

	- Fixed ListAddAt() with a negative index - now it returns false, since
	  nothing is added.
	- Added ListNew(), IsRegex(), RegexFind(), RegexFindLast(), RegexGet(), 
	  RegexGetLast(), RegexGetAll(), RegexMatches(), and RegexSplit() 
	  functions.
	
	
0.9BETA13
.........

	- STRREPLACE() now replaces every occurrence of a string in both Java and 
	  JS.
	- Added STRFORMAT() for formatting strings.
	- SUBSTRING() behavior was changed to clamp start and end indices, if end 
	  is equal to or before start, returns empty string.
	- All OS/Java distributions can now have their "tame" and "tamec" scripts 
	  symlinked to safely.


0.9BETA12
.........

	- Fixed broken list equality/comparison.
	- Fixed deserializing 64-bit floats in the JS implementation.
	- Fixed deserializing 64-bit integers (up to 53-bits) in the JS 
	  implementation.
	- Fixed reading the inheritance hierarchy from modules in JS. 
	- The Java/NodeJS shell implementations return exit codes - mostly for
	  detecting quit on FATAL vs. QUIT.
	- Changed the behavior of AsList() in order to differentiate it from 
	  wrapping a value in a list literal.


0.9BETA11
.........

	- JS interpreter now reads modules from binary serialization.
	- Split NodeJS and NodeJS Module distributions.
	- Added "charset" switch to TAME's Java Shell and Compiler for specifying
	  the input charset for the files being read. Default is system locale.


0.9BETA10
.........

	- The console shell now has a blurb about save/load states.
	- The NodeJS embedded compiler outputs now have a "--help" runtime mode.
	- Made all output cues lower-case by default.


0.9BETA9
........

	- Fixed Open Actions running target blocks twice in the Java 
	  implementation.
	- Fixed Open Actions causing TypeErrors in the JS implementation.
	- TAMEC can take an arbitrary starting file for the JS compiler, expanding
	  the options for how to bundle a compiled module, but only if you
	  know the directives, which are not documented yet (but you can
	  find them in the source code!).
	- Added queue keyword and removed QUEUEACTION*() functions. Queueing
	  commands now works like this:
	  queue a_generalaction;
	  queue a_modalaction, "mode";
	  queue a_openaction, "opentarget";
	  queue a_transitiveaction, o_object;
	  queue a_transitiveaction : c_container;
	  queue a_transitiveaction : c_container, "tagname";
	  queue a_ditransitiveaction, o_object;
	  queue a_ditransitiveaction : c_container;
	  queue a_ditransitiveaction : c_container, "tagname";
	  queue a_ditransitiveaction, o_object, o_object2;


0.9BETA8
........

	- Fixed Short-Circuit And/Or not casting its final result to a boolean 
	  value.
	- Fixed ditransitive commands (executed as transitive) with one 
	  object threw an NPE in the Java implementation.


0.9BETA7
........

	- Changed TAMELogic.handleAction(...) to TAMELogic.handleCommand(...).
	- Added a message to the HTML-Debug compilation type that notifies the 
	  user about how to trace input commands. 
	- Debug inspector added to JS implementation.
	- Fixed some value stuff.


0.9BETA6
........

	- Fixed an issue in the JS impl: tracing a modal action did not give 
	  proper output.
	- Added trace type INTERNAL for function calls that were compiler-
	  generated, not user-called.
	- Fixed an issue: Header() built-in function did not handle a missing key
	  properly.
	  

0.9BETA5
........

	- Better tracing in Java and JS.
	- Fixed an issue in the JS impl. setting list values.
	- Fixed Operation EMPTY in JS impl.: Returned integer value, not boolean.
	- Fixed Operation CLEARELEMENTVALUE in JS impl.
	- Some HTML-compiled improvements.


0.9BETA4
........

	- Added OnElementBrowse(...) block support for the Browse() function.


0.9BETA3
........

	- Fixed OnActionWith*() fatal error on world in JS implementation.


0.9BETA2
........

	- Refactored TAMECommand, Command, and CommandType: "Command" to 
	  "Operation", plus associated methods.
	- Refactored TAMEAction to "TAMECommand", plus associated methods.


0.9BETA1
........

	- Initial release.
