<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<!-- ====================================================================== 
     Text Adventure Module Engine   
     Matt Tropiano                                                                
     ====================================================================== -->
<project name="tame" default="compile">

	<description>TAME</description>

	<property file="build.properties" />
	<property file="versions.properties" />
	
	<!-- Dependencies -->
	<property name="dev.base" value=".." />
	<property name="S" value="${path.separator}" />

	<!-- Project Libs -->
	<property name="common.lib" value="${dev.base}/Common/bin" />
	<property name="common.io.lib" value="${dev.base}/CommonIO/bin" />
	<property name="common.lang.lib" value="${dev.base}/CommonLang/bin" />
	<property name="launch4j.dir" value="${lib.base}/launch4j" />
	<property name="launch4j.lib.jar" value="${launch4j.dir}/launch4j.jar" />
	<property name="launch4j.xstream.lib.jar" value="${launch4j.dir}/lib/xstream.jar" />	
	
	<!-- Project Info -->
	<property name="project.archive" value="tame" />
	<property name="project.java.modules" value="java.base" />	
	<property name="project.javadoc.title" value="TAME" />
	<property name="project.classpath" value="${common.lib}${S}${common.io.lib}${S}${common.lang.lib}" />
	<property name="project.javadoc.packages" value="
		com.tameif.tame,
		com.tameif.tame.compiler,
		com.tameif.tame.console,
		com.tameif.tame.element,
		com.tameif.tame.element.context,
		com.tameif.tame.exception,
		com.tameif.tame.factory,
		com.tameif.tame.interrupt,
		com.tameif.tame.lang
	"/>
	
	<import file="build-import.xml" />
	<import file="build-dependencies.xml" />

	<!-- Folders and File Names -->
	<property name="src.test.dir" value="testsrc" />
	<property name="package.base.dir" value="com/tameif/tame" />
	<property name="resource.dir" value="resources" />
	<property name="replace.dir" value="${build.dir}/replace" />
	<property name="tamedocs.dir" value="${build.dir}/tamedocs" />
	<property name="jre.dir" value="${build.dir}/jre" />
	<property name="jre.scripts.dir" value="${jre.dir}/scripts" />
	<property name="scripts.dir" value="${build.dir}/scripts" />

	<property name="zip.jar.filename" value="${project.archive}-${build.version}.zip" />
	<property name="zip.jre.win32.filename" value="${project.archive}-jre-win32-${build.version}.zip" />
	<property name="zip.jre.win64.filename" value="${project.archive}-jre-win64-${build.version}.zip" />
	<property name="zip.jre.osx.filename" value="${project.archive}-jre-osx-${build.version}.dmg" />
	<property name="zip.jre.linux32.filename" value="${project.archive}-jre-linux32-${build.version}.tar.gz" />
	<property name="zip.jre.linux64.filename" value="${project.archive}-jre-linux64-${build.version}.tar.gz" />
	
	<property name="jar.tame.filename" value="${project.archive}-${build.version}.jar" />
	<property name="jar.one.filename" value="${project.archive}-one-${build.version}.jar" />
	<property name="jar.one.min.filename" value="${project.archive}-one-${build.version}-min.jar" />
	<property name="jar.compiler.one.filename" value="${project.archive}-compiler-${build.version}.jar" />
	<property name="jar.console.client.one.filename" value="${project.archive}-client-${build.version}.jar" />	
	<property name="jar.compiler.one.min.filename" value="${project.archive}-compiler-${build.version}-min.jar" />
	<property name="jar.console.client.one.min.filename" value="${project.archive}-client-${build.version}-min.jar" />	

	<!-- Filesets -->
	
	<zipfileset 
		id="fileset.all.min" 
		src="${jar.dir}/${jar.one.filename}" 
		includesfile="build-tame-one-min-include.def" 
	/>

	<zipfileset 
		id="fileset.compiler.min" 
		src="${jar.dir}/${jar.compiler.one.filename}" 
		includesfile="build-tamec-min-include.def" 
	/>

	<zipfileset 
		id="fileset.client.min" 
		src="${jar.dir}/${jar.console.client.one.filename}" 
		includesfile="build-tame-min-include.def" 
	/>
	
	<target name="clean.win32" description="Cleans up the exe builds.">
		<delete dir="${win32.dir}" includeemptydirs="true" casesensitive="false" /> 
	</target>

	<target name="init.win32" depends="clean.win32" description="Initializes the EXE folders.">
		<mkdir dir="${win32.dir}" />
	</target>

	<target name="clean" depends="clean.jar, clean.docs, clean.zip, clean.compile, clean.win32, clean.jre"  description="Cleans up everything.">
	</target>

	<target name="compile.scripts.windows" if="${os.isWindows}">
		<!-- Windows Commands -->
		<echo message="@java -cp ${project.classpath}${S}${bin.dir} com.tameif.tame.console.TAMEConsoleClientMain %*&#10;" file="tame.cmd" />
		<echo message="@java -cp ${project.classpath}${S}${bin.dir} com.tameif.tame.compiler.TAMECompilerMain %*&#10;" file="tamec.cmd" />
	</target>
	
	<target name="compile.scripts.bash" if="${os.bash}">
		<!-- Bash Shell Commands -->
		<echo message="#!/bin/bash&#10;" file="tame.sh" />
		<echo message="java -cp ${project.classpath}${S}${bin.dir} com.tameif.tame.console.TAMEConsoleClientMain $@&#10;" file="tame.sh" append="true" />
		<echo message="#!/bin/bash&#10;" file="tamec.sh" />
		<echo message="java -cp ${project.classpath}${S}${bin.dir} com.tameif.tame.compiler.TAMECompilerMain $@&#10;" file="tamec.sh" append="true" />
		<!-- Set permissions -->
		<chmod file="tame.sh" perm="ugo+rx"/>
		<chmod file="tamec.sh" perm="ugo+rx"/>
	</target>

	<target name="compile" depends="init.compile, get.os, compile.scripts.windows, compile.scripts.bash" description="Compiles the project, excluding test classes.">
		<javac 
			source="1.8"
			target="1.8"
			srcdir="${src.dir}" 
			destdir="${bin.dir}"
            includeAntRuntime="false"
			classpath="${project.classpath}"
			debug="off" 
		/>
		<copy todir="${bin.dir}">
			<fileset dir="${resource.dir}" />
		</copy>
	</target>

	<target name="compile.tests.only" description="Compiles test classes.">
		<javac 
			source="1.8"
			target="1.8"
			srcdir="${src.test.dir}" 
			destdir="${bin.dir}"
            includeAntRuntime="false"
			classpath="${project.classpath}${S}${bin.dir}"
			debug="off" 
		/>
	</target>

	<target name="compile.all" depends="compile, compile.tests.only" description="Compiles everything.">
	</target>

	<target name="dependency.common">
		<git-export repository="https://github.com/BlackRookSoftware/Common" dest="${dependencies.dir}/Common" />
		<ant antfile="${dependencies.dir}/Common/build.xml" useNativeBasedir="true" inheritAll="false" target="compile" />
	</target>
	<target name="dependency.commonio">
		<git-export repository="https://github.com/BlackRookSoftware/CommonIO" dest="${dependencies.dir}/CommonIO" />
		<ant antfile="${dependencies.dir}/CommonIO/build.xml" useNativeBasedir="true" inheritAll="false" target="compile" />
	</target>
	<target name="dependency.commonlang">
		<git-export repository="https://github.com/BlackRookSoftware/CommonLang" dest="${dependencies.dir}/CommonLang" />
		<ant antfile="${dependencies.dir}/CommonLang/build.xml" useNativeBasedir="true" inheritAll="false" target="compile" />
	</target>
	<target name="dependency.properties">
		<echo message="Writing to build.properties...." />
		<echo message="dev.base=${dependencies.dir}&#10;" file="build.properties" append="true" />
		<echo message="libs.base=${dependencies.dir}&#10;" file="build.properties" append="true" />
		<echo message="launch4j.dir=${dependencies.dir}/launch4j&#10;" file="build.properties" append="true" />
	</target>
	
	<target name="dependencies" depends="init.dependencies, dependency.common, dependency.commonio, dependency.commonlang, dependency.properties" description="Downloads and compiles the dependencies.">
	</target>

	<target name="javadoc" depends="init.docs" description="Builds the documentation.">
        <javadoc access="protected" 
        	additionalparam="-J-Xmx512m  " author="true" 
        	classpath="${project.classpath}${path.separator}${bin.dir}" 
        	doctitle="${project.javadoc.title}" 
        	sourcepath="${src.dir}" 
        	packagenames="${project.javadoc.packages}"
        	destdir="${docs.dir}" 
    		source="1.8" 
        	splitindex="true" 
        	use="true" 
        	version="true" 
        	nodeprecated="false" 
        	nodeprecatedlist="false" 
        	noindex="false" 
        	nonavbar="false" 
        	notree="false"
    		>
            <link href="https://blackrooksoftware.com/docs/common/"/>
            <link href="https://blackrooksoftware.com/docs/commonio/"/>
            <link href="https://blackrooksoftware.com/docs/commonlang/"/>
            <link href="https://docs.oracle.com/javase/10/docs/api/"/>
        </javadoc>
    </target>	

	<!-- Generates the version resource. -->
	<target name="write.version">
		<delete file="${bin.dir}/TAMEVersion.txt" />
		<echo message="${build.version}" file="${bin.dir}/${package.base.dir}/TAMEVersion.txt" />
	</target>

	<target name="jar.tame" depends="compile, write.version" description="Jars up TAME classes. Nothing executable.">
		<delete file="${jar.dir}/${jar.tame.filename}" casesensitive="false" /> 
		<jar destfile="${jar.dir}/${jar.tame.filename}">
			<fileset dir="${bin.dir}" >
			    <exclude name="**/console/" />
			    <exclude name="**/compiler/" />
			    <exclude name="**/test/" />
			</fileset>
		</jar>
	</target>
	
	<target name="jar.tame.one" depends="compile, write.version" description="Jars up all classes needed to run the compiler and console in one standalone JAR.">
		<delete file="${jar.dir}/${jar.one.filename}" casesensitive="false" /> 
		<jar destfile="${jar.dir}/${jar.one.filename}">
			<fileset dir="${bin.dir}" >
			    <exclude name="**/test/" />
			</fileset>
		</jar>
		<jar destfile="${jar.dir}/${jar.one.filename}" update="true">
			<fileset dir="${common.lib}" >
			</fileset>
			<fileset dir="${common.io.lib}" >
			</fileset>
			<fileset dir="${common.lang.lib}" >
			</fileset>
		</jar>
	</target>
	
	<target name="jar.tame.one.min" depends="jar.tame.one" description="Jars up all classes needed to run the compiler and console in one standalone JAR.">
		<delete file="${jar.dir}/${jar.one.min.filename}" casesensitive="false" /> 
		<jar destfile="${jar.dir}/${jar.one.min.filename}">
			<zipfileset refid="fileset.all.min" />
		</jar>
	</target>
	
	<target name="jar.tame.compiler.one" depends="compile, write.version" description="Jars up all classes needed to run the compiler and console in one standalone JAR, minified.">
		<delete file="${jar.dir}/${jar.compiler.one.filename}" casesensitive="false" />
		<jar destfile="${jar.dir}/${jar.compiler.one.filename}">
			<manifest>
		    	<attribute name="Main-Class" value="com.tameif.tame.compiler.TAMECompilerMain"/>
            </manifest>
			<fileset dir="${bin.dir}" >
			    <exclude name="**/console/" />
			    <exclude name="**/test/" />
			</fileset>
		</jar>
		<jar destfile="${jar.dir}/${jar.compiler.one.filename}" update="true">
			<fileset dir="${common.lib}" >
			</fileset>
			<fileset dir="${common.io.lib}" >
			</fileset>
			<fileset dir="${common.lang.lib}" >
			</fileset>
		</jar>
	</target>

	<target name="jar.tame.compiler.one.min" depends="jar.tame.compiler.one" description="Jars up the minified set of classes needed to run the compiler in one standalone JAR.">
		<delete file="${jar.dir}/${jar.compiler.one.min.filename}" casesensitive="false" />
		<jar destfile="${jar.dir}/${jar.compiler.one.min.filename}">
			<manifest>
		    	<attribute name="Main-Class" value="com.tameif.tame.compiler.TAMECompilerMain"/>
            </manifest>
			<zipfileset refid="fileset.compiler.min" />
		</jar>
	</target>
	
	<target name="jar.tame.console.client.one" depends="compile, write.version" description="Jars up all classes needed to run the console client in one standalone JAR.">
		<delete file="${jar.dir}/${jar.console.client.one.filename}" casesensitive="false" />
		<jar destfile="${jar.dir}/${jar.console.client.one.filename}">
			<manifest>
		    	<attribute name="Main-Class" value="com.tameif.tame.console.TAMEConsoleClientMain"/>
            </manifest>
			<fileset dir="${bin.dir}" >
			    <exclude name="**/compiler/" />
			    <exclude name="**/test/" />
			</fileset>
		</jar>
		<jar destfile="${jar.dir}/${jar.console.client.one.filename}" update="true">
			<fileset dir="${common.lib}" >
			</fileset>
			<fileset dir="${common.io.lib}" >
			</fileset>
			<fileset dir="${common.lang.lib}" >
			</fileset>
		</jar>
	</target>

	<target name="jar.tame.console.client.one.min" depends="jar.tame.console.client.one" description="Jars up the minified set of classes needed to run the console client in one standalone JAR.">
		<delete file="${jar.dir}/${jar.console.client.one.min.filename}" casesensitive="false" />
		<jar destfile="${jar.dir}/${jar.console.client.one.min.filename}">
			<manifest>
		    	<attribute name="Main-Class" value="com.tameif.tame.console.TAMEConsoleClientMain"/>
            </manifest>
			<zipfileset refid="fileset.client.min" />
		</jar>
	</target>

	<target name="clean.jar.scripts">
		<delete dir="${scripts.dir}" includeemptydirs="true" casesensitive="false" />
	</target>

	<target name="init.jar.scripts" depends="clean.jar.scripts">
		<mkdir dir="${scripts.dir}" />
	</target>

	<target name="jar.scripts.windows">
		<!-- Windows Commands -->
		<echo message="@java -cp &quot;%~dp0\${jar.one.min.filename}&quot; com.tameif.tame.console.TAMEConsoleClientMain %*&#10;" file="${scripts.dir}/tame.cmd" />
		<echo message="@java -cp &quot;%~dp0\${jar.one.min.filename}&quot; com.tameif.tame.compiler.TAMECompilerMain %*&#10;" file="${scripts.dir}/tamec.cmd" />
	</target>
	
	<target name="jar.scripts.bash">
		<!-- Bash Shell Commands -->
		<echo message="#!/bin/bash&#10;" file="${scripts.dir}/tame" />
		<echo message="SCRIPTDIR=$(dirname $(readlink -f $0))&#10;" file="${scripts.dir}/tame" append="true" />
		<echo message="java -cp &quot;$SCRIPTDIR/${jar.one.min.filename}&quot; com.tameif.tame.console.TAMEConsoleClientMain $@&#10;" file="${scripts.dir}/tame" append="true" />
		
		<echo message="#!/bin/bash&#10;" file="${scripts.dir}/tamec" />
		<echo message="SCRIPTDIR=$(dirname $(readlink -f $0))&#10;" file="${scripts.dir}/tamec" append="true" />
		<echo message="java -cp &quot;$SCRIPTDIR/${jar.one.min.filename}&quot; com.tameif.tame.compiler.TAMECompilerMain $@&#10;" file="${scripts.dir}/tamec" append="true" />
		<!-- Set permissions -->
		<chmod file="${scripts.dir}/tame" perm="ugo+rx"/>
		<chmod file="${scripts.dir}/tamec" perm="ugo+rx"/>
	</target>

	<target name="jar.scripts" depends="init.jar.scripts, jar.scripts.windows, jar.scripts.bash" description="Creates the scripts for running the standalone minified JAR.">
	</target>

	<target name="jar" depends="init.jar, jar.tame, jar.tame.one, jar.tame.one.min, jar.tame.compiler.one, jar.tame.compiler.one.min, jar.tame.console.client.one, jar.tame.console.client.one.min" description="Make all JARs.">
	</target>

	<target name="zip.jar" depends="init.zip, jar" description="Makes and zips the JARs.">
		<delete file="${zip.dir}/${zip.filename}" />
		<zip destfile="${zip.dir}/${zip.filename}">
			<fileset dir="${jar.dir}" />
			<fileset refid="fileset.documents" />
		</zip>
	</target>

	<target name="zip" depends="zip.jar, zip.docs" description="Creates all zips.">
	</target>
	
	<!-- JRE Embedded Targets -->

	<property name="jlink.options" value="--compress=2" />
	
	<target name="clean.jre">
		<delete dir="${jre.dir}" includeemptydirs="true" casesensitive="false" /> 
	</target>

	<target name="init.jre" depends="clean.jre">
		<mkdir dir="${jre.dir}" />
	</target>

	<target name="init.jre.scripts" depends="init.jre">
		<mkdir dir="${jre.scripts.dir}" />
	</target>

	<target name="jre.win32" if="${os.isWindows32}">
		<property name="embedded.win32.dir" value="${jre.dir}/win32" />
		<exec executable="jlink">
			<arg line="${jlink.options} --add-modules ${project.java.modules} --output &quot;${embedded.win32.dir}&quot;" />
		</exec>
	</target>

	<target name="jre.win64" if="${os.isWindows64}">
		<property name="embedded.win64.dir" value="${jre.dir}/win64" />
		<exec executable="jlink">
			<arg line="${jlink.options} --add-modules ${project.java.modules} --output &quot;${embedded.win64.dir}&quot;" />
		</exec>
	</target>

	<target name="jre.osx" if="${os.isOSX}">
		<property name="embedded.osx.dir" value="${jre.dir}/osx" />
		<exec executable="jlink">
			<arg line="${jlink.options} --add-modules ${project.java.modules} --output &quot;${embedded.osx.dir}&quot;" />
		</exec>
	</target>

	<target name="jre.linux32" if="${os.isLinux32}">
		<property name="embedded.linux32.dir" value="${jre.dir}/linux32" />
		<exec executable="jlink">
			<arg line="${jlink.options} --add-modules ${project.java.modules} --output &quot;${embedded.linux32.dir}&quot;" />
		</exec>
	</target>

	<target name="jre.linux64" if="${os.isLinux64}">
		<property name="embedded.linux64.dir" value="${jre.dir}/linux64" />
		<exec executable="jlink">
			<arg line="${jlink.options} --add-modules ${project.java.modules} --output &quot;${embedded.linux64.dir}&quot;" />
		</exec>
	</target>

	<target name="jre.scripts.windows">
		<!-- Windows Commands -->
		<echo message="@&quot;%~dp0\jre\bin\java.exe&quot; -cp &quot;%~dp0\${jar.one.min.filename}&quot; com.tameif.tame.console.TAMEConsoleClientMain %*&#10;" file="${jre.scripts.dir}/tame.cmd" />
		<echo message="@&quot;%~dp0\jre\bin\java.exe&quot; -cp &quot;%~dp0\${jar.one.min.filename}&quot; com.tameif.tame.compiler.TAMECompilerMain %*&#10;" file="${jre.scripts.dir}/tamec.cmd" />
	</target>
	
	<target name="jre.scripts.bash">
		<!-- Bash Shell Commands -->
		<echo message="#!/bin/bash&#10;" file="${jre.scripts.dir}/tame" />
		<echo message="SCRIPTDIR=$(dirname $(readlink -f $0))&#10;" file="${jre.scripts.dir}/tame" append="true" />
		<echo message="$SCRIPTDIR/jre/bin/java -cp &quot;$SCRIPTDIR/${jar.one.min.filename}&quot; com.tameif.tame.console.TAMEConsoleClientMain $@&#10;" file="${jre.scripts.dir}/tame" append="true" />
		
		<echo message="#!/bin/bash&#10;" file="${jre.scripts.dir}/tamec" />
		<echo message="SCRIPTDIR=$(dirname $(readlink -f $0))&#10;" file="${jre.scripts.dir}/tamec" append="true" />
		<echo message="$SCRIPTDIR/jre/bin/java -cp &quot;$SCRIPTDIR/${jar.one.min.filename}&quot; com.tameif.tame.compiler.TAMECompilerMain $@&#10;" file="${jre.scripts.dir}/tamec" append="true" />
		<!-- Set permissions -->
		<chmod file="${jre.scripts.dir}/tame" perm="ugo+rx"/>
		<chmod file="${jre.scripts.dir}/tamec" perm="ugo+rx"/>
	</target>

	<target name="jre.scripts" depends="init.jre.scripts, jre.scripts.windows, jre.scripts.bash" description="Creates the scripts for running a minified JRE.">
	</target>

	<target name="jre" depends="get.os, init.jre, jre.win64, jre.win32, jre.osx, jre.linux64, jre.linux32" description="Creates the a minified JRE via JLink (JDK 9+).">
	</target>
	
	<!-- ==== Java Deployment Targets ==== -->

	<target name="jre.win32.deploy" if="embedded.win32.dir">
	</target>
		
	<!-- ================================= -->

	<target name="release" depends="zip">
	</target>

</project>